{"version":3,"sources":["webpack://itsprogramming/./src/templates/blog-post.js"],"names":["BlogPost","previousPostIndex","nextPostIndex","pageContext","data","post","markdownRemark","categoryPosts","Object","entries","allMarkdownRemark","currentPostIndex","nextPost","previousPost","undefined","index","node","className","frontmatter","title","Card","dangerouslySetInnerHTML","__html","html","PreviousPostNav","NextPostNav","props","subTitleString","date","substring","replace","timeToRead","postURL","fields","slug","href","subTitle","excerpt"],"mappings":"oMAMe,SAASA,EAAT,GAA0C,IAInDC,EACAC,EAL6BC,EAAqB,EAArBA,YAAaC,EAAQ,EAARA,KACxCC,EAAOD,EAAKE,eACZC,EAAgBC,OAAOC,QAAQL,EAAKM,mBAAmB,GAAG,GAC5DC,EAAmB,EAGnBC,EAAW,KACXC,EAAe,KAgBnB,OAdmBC,MAAfX,GAA2C,MAAfA,IAC9BQ,EAAmBR,EAAYY,OAIjCb,EAAgBS,EAAmB,EAEKG,MAApCP,EAHJN,EAAoBU,EAAmB,IAGkD,MAApCJ,EAAcN,KACjEY,EAAeN,EAAcN,GAAmBe,MAEdF,MAAhCP,EAAcL,IAA+D,MAAhCK,EAAcL,KAC7DU,EAAWL,EAAcL,GAAec,MAIxC,uBAAKC,UAAU,UACb,gBAAC,IAAD,MAEA,uBAAKA,UAAU,2BACb,sBAAIA,UAAU,wBAAwBZ,EAAKa,YAAYC,OAEvD,gBAAC,EAAAC,KAAD,CAAMH,UAAU,kBACd,uBAAKI,wBAAyB,CAAEC,OAAQjB,EAAKkB,SAG/C,uBAAKN,UAAU,iCACb,uBAAKA,UAAU,SACb,gBAACO,EAAD,CAAiBX,aAAcA,KAEjC,uBAAKI,UAAU,SACb,gBAACQ,EAAD,CAAab,SAAUA,QAwCnC,SAASa,EAAYC,GACnB,GAAsBZ,MAAlBY,EAAMd,UAA2C,MAAlBc,EAAMd,SAAkB,CACzD,IACIe,EADgBD,EAAMd,SAASM,YAAYU,KAAKC,UAAU,EAAG,IAAIC,QAAQ,MAAO,KAClE,KAAwBJ,EAAMd,SAASmB,WAAvC,QACdC,EAAUN,EAAMd,SAASqB,OAAOC,KAEpC,OACE,qBAAGC,KAAMH,GACP,gBAAC,EAAAZ,KAAD,CACED,MAAOO,EAAMd,SAASM,YAAYC,MAClCiB,SAAUT,GACTD,EAAMd,SAASyB,UAKxB,MAAQ,GAGV,SAASb,EAAgBE,GACvB,GAA0BZ,MAAtBY,EAAMb,cAAmD,MAAtBa,EAAMb,aAAsB,CAEjE,IACIc,EADgBD,EAAMb,aAAaK,YAAYU,KAAKC,UAAU,EAAG,IAAIC,QAAQ,MAAO,KACtE,KAAwBJ,EAAMb,aAAakB,WAA3C,QACdC,EAAUN,EAAMb,aAAaoB,OAAOC,KAExC,OACE,qBAAGC,KAAMH,GACP,gBAAC,EAAAZ,KAAD,CACED,MAAOO,EAAMb,aAAaK,YAAYC,MACtCiB,SAAUT,GACTD,EAAMb,aAAawB,UAK1B,MAAQ","file":"component---src-templates-blog-post-js-4cd2986a8ce0886217c1.js","sourcesContent":["import * as React from \"react\"\r\nimport { SideNav } from '../components/side-nav';\r\nimport { graphql } from \"gatsby\"\r\nimport { Card } from 'primereact/card';\r\nimport 'primeflex/primeflex.css';\r\n\r\nexport default function BlogPost({ pageContext, data }) {\r\n  const post = data.markdownRemark;\r\n  const categoryPosts = Object.entries(data.allMarkdownRemark)[0][1];\r\n  let currentPostIndex = 0;\r\n  let previousPostIndex;\r\n  let nextPostIndex;\r\n  let nextPost = null;\r\n  let previousPost = null;\r\n\r\n  if (pageContext != undefined || pageContext != null) {\r\n    currentPostIndex = pageContext.index;\r\n  }\r\n\r\n  previousPostIndex = currentPostIndex - 1;\r\n  nextPostIndex = currentPostIndex + 1;\r\n\r\n  if (categoryPosts[previousPostIndex] != undefined || categoryPosts[previousPostIndex] != null) {\r\n    previousPost = categoryPosts[previousPostIndex].node;\r\n  }\r\n  if (categoryPosts[nextPostIndex] != undefined || categoryPosts[nextPostIndex] != null) {\r\n    nextPost = categoryPosts[nextPostIndex].node;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-grid\">\r\n      <SideNav />\r\n\r\n      <div className=\"p-xl-12 p-lg-12 p-sm-12\">\r\n        <h1 className=\"post-full-card-title\">{post.frontmatter.title}</h1>\r\n\r\n        <Card className=\"post-full-card\">\r\n          <div dangerouslySetInnerHTML={{ __html: post.html }}></div>\r\n        </Card>\r\n\r\n        <div className=\"p-grid post-footer-pagination\">\r\n          <div className=\"p-col\">\r\n            <PreviousPostNav previousPost={previousPost} />\r\n          </div>\r\n          <div className=\"p-col\">\r\n            <NextPostNav nextPost={nextPost} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!, $category: String!) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        index\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n    filter: {frontmatter: {categories: {eq: $category}}}\r\n    sort: {fields: frontmatter___index, order: ASC}\r\n  ) {\r\n    edges {\r\n      node {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date\r\n          title\r\n          categories\r\n          index\r\n        }\r\n        timeToRead\r\n      }\r\n    }\r\n  }\r\n  }\r\n`\r\n\r\nfunction NextPostNav(props) {\r\n  if (props.nextPost != undefined || props.nextPost != null) {\r\n    let formattedDate = props.nextPost.frontmatter.date.substring(0, 10).replace(/\\-/g, \".\");\r\n    let subTitleString = `${formattedDate} (${props.nextPost.timeToRead} min)`;\r\n    let postURL = props.nextPost.fields.slug;\r\n\r\n    return (\r\n      <a href={postURL}>\r\n        <Card\r\n          title={props.nextPost.frontmatter.title}\r\n          subTitle={subTitleString}>\r\n          {props.nextPost.excerpt}\r\n        </Card>\r\n      </a>\r\n    );\r\n  }\r\n  return (\"\");\r\n}\r\n\r\nfunction PreviousPostNav(props) {\r\n  if (props.previousPost != undefined || props.previousPost != null) {\r\n\r\n    let formattedDate = props.previousPost.frontmatter.date.substring(0, 10).replace(/\\-/g, \".\");\r\n    let subTitleString = `${formattedDate} (${props.previousPost.timeToRead} min)`;\r\n    let postURL = props.previousPost.fields.slug;\r\n\r\n    return (\r\n      <a href={postURL}>\r\n        <Card\r\n          title={props.previousPost.frontmatter.title}\r\n          subTitle={subTitleString}>\r\n          {props.previousPost.excerpt}\r\n        </Card>\r\n      </a>\r\n    );\r\n  } else {\r\n    return (\"\");\r\n  }\r\n\r\n  function findNestedObj(entireObj, keyToFind, valToFind) {\r\n    let foundObj;\r\n    JSON.stringify(entireObj, (_, nestedValue) => {\r\n      if (nestedValue && nestedValue[keyToFind] === valToFind) {\r\n        foundObj = nestedValue;\r\n      }\r\n      return nestedValue;\r\n    });\r\n    return foundObj;\r\n  }\r\n}"],"sourceRoot":""}