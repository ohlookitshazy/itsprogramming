{"componentChunkName":"component---src-templates-blog-post-js","path":"/advanced-html/folder-structure/","result":{"data":{"markdownRemark":{"html":"<p>Previously we took a look at the index.html file, now let's look at what else is in the .zip from the HTML5 Boilerplate project.</p>\n<h1>Folders</h1>\n<p>We have 4 folders. \"img\" is for your images, \"css\" is for your .css files, \"js\" is for your .js files. This is a pretty obvious and a good way to separate your concerns even further, to keep the folder structure easy to maintain.</p>\n<h1>What about \"doc\"?</h1>\n<p>Doc usually stands for documentation, so this is the local copy of their documentation on GitHub. If you drag the TOC.md (for \"Table of Contents\") file into your browser, you will see it readable, but in a specific format. The \".md\" stands for \"Markup Document\", so this is <a href=\"https://www.markdownguide.org/basic-syntax/\">MarkDown</a> format. It's used very frequently for writing documentation, because you can easily write formatted documentation without any additional software.</p>\n<p>If you're using Visual Studio Code, you can preview MarkDown files with their formatting intact via opening any .md file with Visual Studio Code, then pressing F1 and typing/selecting: \"Markdown: Open Preview\". </p>\n<p>You should then see it rendered, with headings, lists and links should be clickable too. Additionally you can keep it open to the side, for example to see it rendered instantly as you type.</p>\n<p>Each post on this blog is in .md too, by the way, so it's not limited only to documentation. It's a popular format, you'll see it alot.</p>\n<h1>Why is there a 404.html in the folder?</h1>\n<p>If you open the file in your browser, you'll see \"Page Not Found\". You might be wondering what is this about and probably you've seen it when you've ventured into the deep, dark corners of the internet. Or a poorly maintained website.</p>\n<p>404 is an error code. Returned by the server you might be trying to reach, by trying to access a page. This means the server didn't find the page you're looking for. The file could be removed, renamed or moved somewhere else, but the link hasn't been updated.</p>\n<p>Usually, websites have a dedicated page where to send the user if the requested page wasn't found. Instead of giving a blank page and no further instructions to the user, it simply usually says that the page wasn't found, and maybe gives you a search form to try and find what you were looking for again.</p>\n<h1>So why 404?</h1>\n<p>It's an error code, meaning <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\">one of the many codes</a> you can get when interacting with a server. </p>\n<p>You don't need to know all of them, or even most of them. You should know that they exist on a list and usually help you understand what the server is trying to say.</p>\n<p>Most common ones are:</p>\n<ul>\n<li>200 - OK</li>\n<li>400 - Bad Request</li>\n<li>404 - Not Found</li>\n<li>500 - Internal Server Error</li>\n</ul>\n<p>So each time you visit a webpage, the browser is receiving these in the background all of the time, for each resource pretty much. You can see those in the \"Network\" tab of the browser Dev Tools (usually accessible with F12).</p>\n<p>Thus logically, HTML5BP decided to include a 404 page by default. Unless you're actually building a server at this point, it doesn't really matter, because when deployed locally, there is no automatic redirection to the 404 if a resource isn't found.</p>","frontmatter":{"title":"Folder Structure","index":1}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"By now it should be clear as to what HTMLs main purpose is. It's also important to reach out and see what best practices people implement…","fields":{"slug":"/advanced-html/html-best-practices/"},"frontmatter":{"date":"2020-12-04T00:00:00.000Z","title":"HTML Best Practices","categories":["Advanced HTML"],"index":0},"timeToRead":7}},{"node":{"excerpt":"Previously we took a look at the index.html file, now let's look at what else is in the .zip from the HTML5 Boilerplate project. Folders We…","fields":{"slug":"/advanced-html/folder-structure/"},"frontmatter":{"date":"2020-12-10T00:00:00.000Z","title":"Folder Structure","categories":["Advanced HTML"],"index":1},"timeToRead":2}},{"node":{"excerpt":"The project layout should now start to make sense. We have a bunch of files in the main folder left, so let's go over them. Starting with…","fields":{"slug":"/advanced-html/favicon/"},"frontmatter":{"date":"2020-12-10T00:00:00.000Z","title":"Favicon","categories":["Advanced HTML"],"index":2},"timeToRead":1}},{"node":{"excerpt":"The project layout should now start to make sense. We have a bunch of files, which I call \"metadata\" in the main folder. They usually…","fields":{"slug":"/advanced-html/metadata/"},"frontmatter":{"date":"2020-12-10T00:00:00.000Z","title":"Metadata","categories":["Advanced HTML"],"index":3},"timeToRead":4}}]}},"pageContext":{"slug":"/advanced-html/folder-structure/","category":"Advanced HTML","index":1}},"staticQueryHashes":[]}