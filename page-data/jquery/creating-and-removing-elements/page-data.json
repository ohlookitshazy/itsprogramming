{"componentChunkName":"component---src-templates-blog-post-js","path":"/jquery/creating-and-removing-elements/","result":{"data":{"markdownRemark":{"html":"<p>Manipulating elements is cool and all, but what if we'd like to create some? Or perhaps we have dug ourselves in too deep into the digital jungle or maze and we'd like to remove some dynamically? Let's take a look at how it's done both in vanilla JavaScript and jQuery.</p>\n<h1>Creating Elements with JavaScript</h1>\n<p>Creating HTML elements from scratch in JavaScript is not hard, but it does involve a few function calls:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> myCard <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myCard<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    \n    <span class=\"token keyword\">var</span> myCardText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Some text for the new card.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myCard<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myCardText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> targetElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Notice the \"$(document).ready()\" being used here, so we're sure the element is there. Now let's break it down line by line:</p>\n<ul>\n<li>3: We create a generic HTML element, here we directly control what is put between the square brackets \"&#x3C; ... >\", in our case this will result into a <code class=\"language-text\">&lt;div&gt;&lt;/div&gt;</code> element being created,</li>\n<li>4: We add a \"card\" class to the element class list, it becomes this: <code class=\"language-text\">&lt;div class=&quot;card&quot;&gt;&lt;/div&gt;</code> so that Bootstrap rules can make it look like a card,</li>\n<li>6: We create a text node, for simplicity - imagine we're just creating a special text object,</li>\n<li>7: We connect the text object to our previously made object, so the result is: <code class=\"language-text\">&lt;div class=&quot;card&quot;&gt;Some text for the new card.&lt;/div&gt;</code></li>\n<li>9: We just log it, to make sure that it's working properly,</li>\n<li>11: We target an element to add this object inside of,</li>\n<li>12: We add the new element at the end of the child elements of the targeted element.</li>\n</ul>\n<p>In our case - \"Take this object, find the div with the id: \"myId\", which could just be a <code class=\"language-text\">&lt;div id=&quot;myId&quot; class=&quot;col&quot;&gt;&lt;/div&gt;</code> and add the card as the last child element inside it.\" so if it would have a few cards inside of it, it would add this new one after the last one.</p>\n<p><strong>Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>First card!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Second card!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- if you use .appendChild(), the element would go here --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>and on the other hand, if you'd use <strong>.prepend()</strong>:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myId<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token comment\">&lt;!-- then the element would go here instead, before the other \"child\" elements --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>First card!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>card<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Second card!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h1>Removing Elements with JavaScript</h1>\n<p>Removing elements is easier, all you have to do is target them and call its \"parent\" element (or node), then call \".removeChild\" and pass the element as the target to remove, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> removableElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"someId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nremovableElement<span class=\"token punctuation\">.</span>parentNode<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>removableElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Seems logical, but I wish we could write this in a more readable manner. Oh wait, <strong>where's jQuery</strong>?</p>\n<h1>Creating Elements with jQuery</h1>\n<p>What if I told you it's so convenient to create elements via jQuery, that you don't even need to call any extra functions?</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div>Some card text.&lt;/div>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Yup.</p>\n<div class=\"tenor-gif-embed\" data-postid=\"14053511\" data-share-method=\"host\" data-width=\"100%\" data-aspect-ratio=\"1.7131782945736433\"><a href=\"https://tenor.com/view/mindblown-excuse-me-what-me-dr-phil-gif-14053511\">Mindblown Excuse Me GIF</a> from <a href=\"https://tenor.com/search/mindblown-gifs\">Mindblown GIFs</a></div><script type=\"text/javascript\" async src=\"https://tenor.com/embed.js\"></script>\n<p>To add the element class, you can either do it like:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> myCard <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div class='card'>Some card text.&lt;/div>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>or if you have dynamic classes being added, based on conditions or whatnot, you can use this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> myCard <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div>Some card text.&lt;/div>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Now to add the element under a parent element with jQuery, you do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Nothing surprising there, you just select the parent element and call \".append()\". So the full example equivalent to what we did before with JavaScript would be:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> myCard <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;div class='card'>Some card text.&lt;/div>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Compared to doing the same with just JavaScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token keyword\">var</span> myCard <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myCard<span class=\"token punctuation\">.</span>classList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"card\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    \n    <span class=\"token keyword\">var</span> myCardText <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Some text for the new card.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    myCard<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myCardText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">var</span> targetElement <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"myId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    targetElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>myCard<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Obviously the amount of code lines needed to do the same functionality, went from 7 to 3. Efficiency literally rose by more than a half here.</p>\n<h1>Removing Elements with jQuery</h1>\n<p>As you might imagine, you just select the element you need (or don't need) and call the \".remove()\" function on it:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#myId\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Look at that, you don't even have to select the parent element anymore or anything. </p>\n<p>Just pure convenience.</p>","frontmatter":{"title":"Creating and Removing Elements","index":2}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"So jQuery seems like a very useful framework, let's try it out! You probably noticed the word \"query\" in \"jQuery\", it means \"to ask for…","fields":{"slug":"/jquery/getting-started-with-jquery/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Getting Started with jQuery","categories":["jQuery"],"index":0},"timeToRead":5}},{"node":{"excerpt":"The title sounds like we're some systems scanning and manipulating documents. Which we actually are. So let's atleast learn to do it…","fields":{"slug":"/jquery/document-traversal-and-manipulation/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Document Traversal and Manipulation","categories":["jQuery"],"index":1},"timeToRead":3}},{"node":{"excerpt":"Manipulating elements is cool and all, but what if we'd like to create some? Or perhaps we have dug ourselves in too deep into the digital…","fields":{"slug":"/jquery/creating-and-removing-elements/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Creating and Removing Elements","categories":["jQuery"],"index":2},"timeToRead":4}}]}},"pageContext":{"slug":"/jquery/creating-and-removing-elements/","category":"jQuery","index":2}},"staticQueryHashes":[]}