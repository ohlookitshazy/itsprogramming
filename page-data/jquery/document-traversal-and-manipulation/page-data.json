{"componentChunkName":"component---src-templates-blog-post-js","path":"/jquery/document-traversal-and-manipulation/","result":{"data":{"markdownRemark":{"html":"<p>The title sounds like we're some systems scanning and manipulating documents. Which we actually <strong>are</strong>. So let's atleast learn to do it professionally, ok?</p>\n<h1>Traversal</h1>\n<p>Traversing, or \"moving\" through the document simply means selecting elements from the hierarchy, like we did before.</p>\n<p>In CSS you can specifically select \"child\" elements from a \"parent\" element, to apply styles, like so:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">div .myClass</span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This would select only the elements, that have the class \"myClass\" and only if they are inside a \"div\" element, so it would target this:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myClass<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>but not this:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myClass<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>So you can do the same selection within jQuery, which would look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div .myClass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Selecting Multiple Elements</h2>\n<p>Say you'd want to select multiple elements in a single jQuery selector, you'd do this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div, .myClass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You only have to separate each element with a comma and with this selector, both of these elements will be selected:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>myClass<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h1>Manipulation</h1>\n<p>Cool so by now we can select any element and change it's HTML! It'd be a lot cooler if we could change CSS on the fly too. <strong>Which we can</strong> very easily, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"red\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As you might imagine, this will get all \"divs\" on the page, then change their CSS property \"color\" (which is the text color) to the value \"red\", which is an ok value, so all of these elements will get their text colored red!</p>\n<p>You can also just store the value of the CSS property from the targeted elements, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> divTextColor <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">css</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"color\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Stuff like this is used, for example, when you fill out a login form and fail some basic validation rules, like it should be an \"x\" amount of characters, have numbers, symbols and etc. If validation fails, usually JavaScript gives the problematic input field a red outline, to help direct your attention to the problem.</p>\n<h2>Managing CSS Classes</h2>\n<p>Instead of providing tons of these individual CSS changes, though, you could add/remove classes instead:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"divClass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Deceptively simple. If you'd have a CSS class imported into the document, like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.divClass</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>then it would make all divs have red colored text, because all of them had the \"divClass\" added to them! Removing classes is done like you'd imagine:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">removeClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"divClass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you're extra lazy (or efficient) you can have both behaviors happen with one function call! It's called \".toggleClass()\", so if the class already exists, it will be removed, if not, then it will be added to the element:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"div\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toggleClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"divClass\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h1>.html() or .text()?</h1>\n<p>At some point you will want to output HTML as text, like for your own code snippet library or examples or whatnot:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".card\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This way won't work, because JavaScript will treat the input value <strong>as HTML</strong> itself. Thus the above code will replace the entire content of the card with <strong>HTML</strong> which in this case will just be invisible. </p>\n<p>So remember to use \".html()\" whenever you need <strong>actual HTML</strong> in the element, like inserting one element into another and use \".text()\" when you are just changing the text, or want to output HTML as text.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">\".card\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;html>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>This will work as you'd expect and output the string as text to the element. For more context, if you'd like to do this in vanilla JavaScript, you'd call the function \".innerText()\".</p>","frontmatter":{"title":"Document Traversal and Manipulation","index":1}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"So jQuery seems like a very useful framework, let's try it out! You probably noticed the word \"query\" in \"jQuery\", it means \"to ask for…","fields":{"slug":"/jquery/getting-started-with-jquery/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Getting Started with jQuery","categories":["jQuery"],"index":0},"timeToRead":5}},{"node":{"excerpt":"The title sounds like we're some systems scanning and manipulating documents. Which we actually are. So let's atleast learn to do it…","fields":{"slug":"/jquery/document-traversal-and-manipulation/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Document Traversal and Manipulation","categories":["jQuery"],"index":1},"timeToRead":3}},{"node":{"excerpt":"Manipulating elements is cool and all, but what if we'd like to create some? Or perhaps we have dug ourselves in too deep into the digital…","fields":{"slug":"/jquery/creating-and-removing-elements/"},"frontmatter":{"date":"2020-05-03T00:00:00.000Z","title":"Creating and Removing Elements","categories":["jQuery"],"index":2},"timeToRead":4}}]}},"pageContext":{"slug":"/jquery/document-traversal-and-manipulation/","category":"jQuery","index":1}},"staticQueryHashes":[]}